package com.controller;

import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import com.model.Chocolate;
import com.service.ChocolateService;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.stereotype.Controller;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import javax.validation.Valid;
import org.springframework.web.bind.annotation.ExceptionHandler;
import com.exception.NoStockException;
import java.util.List;
import java.util.ArrayList;

//use appropriate annotation to configure ChocolateController as Controller
@Controller
public class ChocolateController {

	// use appropriate annotation
	@Autowired
	private ChocolateService chocolateService;

	// invoke the service class - calculateCostAndUpdate method.
	@RequestMapping(value="/calculate", method=RequestMethod.POST)
	public String calculateCost(@ModelAttribute("chocolate") @Valid Chocolate chocolate, BindingResult result, ModelMap model) 
	throws NoStockException
	{

		// fill the code
		String page = "";
		if (result.hasErrors()){
		    page = "showPage";
		}
		else{
        model.put("cost", chocolateService.calculateCost(chocolate));
        model.put("type", chocolate.getChocolateType());
        model.put("quan", chocolate.getQuantity());
        model.put("coPkg", chocolate.getCostPerKg());
		page = "billDesk";
		}
		return page;
	}

	// use appropriate annotation
	@ExceptionHandler(NoStockException.class)
	public ModelAndView exceptionHandler(Exception e) {

		// fill the code
        ModelAndView view = new ModelAndView("exceptionPage");
        view.addObject("error", e.getMessage());
		return view;
	}
	
	@RequestMapping(value="/showPage", method=RequestMethod.GET)
	public String showPage(@ModelAttribute("chocolate") Chocolate chocolate){
	    return "showPage";
	}
	@ModelAttribute("chocoList")
	public List<String> populateChocolate(){
	    return new ArrayList<String>(chocolateService.getChocolateStock().keySet());
	}

}
---------------------------------------------------------------------------
package com.exception;

public class NoStockException extends Exception {
	private static final long serialVersionUID = 1L;

	public NoStockException(String msg) {

		// fill the code
		super(msg);
	}

}
----------------------------------------------------------------------------

package com.model;

import org.springframework.stereotype.Component;
import javax.validation.constraints.Min;
//Use appropriate annotation
@Component
public class Chocolate {
	private String chocolateType;
	// Use appropriate annotation
	@Min(value=1, message="{min.chocolate.quantity}")
	private int quantity;
	private double costPerKg;

	public String getChocolateType() {
		return chocolateType;
	}

	public void setChocolateType(String chocolateType) {
		this.chocolateType = chocolateType;
	}

	public int getQuantity() {
		return quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	public double getCostPerKg() {
		return costPerKg;
	}

	public void setCostPerKg(double costPerKg) {
		this.costPerKg = costPerKg;
	}

	public Chocolate() {
	}
}
-------------------------------------------------------------------------------


package com.service;

import java.util.HashMap;
import java.util.Map;
import com.model.Chocolate;
import org.springframework.stereotype.Service;
import com.exception.NoStockException;
//use appropriate annotation to configure chocolateService as a Service
@Service
public class ChocolateService {

	public double calculateCost(Chocolate chocolate) throws NoStockException{
		double totalCost = 0.0;

		// fill the code
        Map<String, Double> priceMap = new HashMap<String, Double>();
		priceMap.put("MilkChocolate", 17.0);
		priceMap.put("WhiteChocolate", 20.0);
		priceMap.put("DarkChocolate", 25.0);
		priceMap.put("SemisweetChocolate", 15.0);
		priceMap.put("UnsweetenedChocolate", 12.0);
		
		String ty = chocolate.getChocolateType();
		int quan = chocolate.getQuantity();
		int stock = this.getChocolateStock().get(ty);
		if (quan>stock){
		    String msg = "No enough stock for "+ty;
		    throw new NoStockException(msg);
		}
		chocolate.setCostPerKg(priceMap.get(ty));
		totalCost = quan*chocolate.getCostPerKg();
		return totalCost;
	}

	public Map<String, Integer> getChocolateStock() {
		Map<String, Integer> stock = new HashMap<String, Integer>();
		stock.put("MilkChocolate", 125);
		stock.put("WhiteChocolate", 100);
		stock.put("DarkChocolate", 110);
		stock.put("SemisweetChocolate", 75);
		stock.put("UnsweetenedChocolate", 50);
		return stock;
	}
}
------------------------------------------------------------------------

<%@page isELIgnored="false" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %>
<html>
<body bgcolor="lavender"> <center>
<h2>ChocoWorld - A World of Chocolates!!!</h2>
					
						<!--  Design the page as per the requirements-->
	<table>
	    <tr>
	        <td>Chocolate Type</td>
	        <td>${type}</td>
	   </tr>
	   <tr>
	        <td>Quantity</td>
	        <td>${quan}</td>
	   </tr>
	   <tr>
	        <td>Cost Per Kg</td>
	        <td>${coPkg}</td>
	   </tr>
	   <tr>
	        <td>Total cost $</td>
	        <td>${cost}</td>
	   </tr>
	</table>

	</center>	
	
	</body>
</html>

---------------------------------------------------------------------------

<%@page isELIgnored="false" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %>
<html>
<body bgcolor="lavender">

<center> <h2>ChocoWorld - A World of Chocolates!!!</h2>
	<!--  Design the page as per the requirements-->
		
		<div>
		<center><p>${error}</p>	<a href="showPage"> Home</a></center>
		</div>
		</center>
		
</body>
</html>

-------------------------------------------------------------------

<%@ taglib prefix="spring" uri="http://www.springframework.org/tags" %>
<%@ taglib prefix="sf" uri="http://www.springframework.org/tags/form" %>
<%@ taglib uri="http://www.springframework.org/tags/form" prefix="form"%>
<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1" isELIgnored="false"%>


<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>

<body style="background-color:lavender">
<a href="showPage?language=en">English</a>|<a href="showPage?language=de">German</a>|<a href="showPage?language=fr">French</a></align>

<!--  Design the page as per the requirements-->
<form:form method="post" action="calculate" modelAttribute="chocolate">
<table>
    <tr>
        <td><spring:message code="label.chocolateType"/></td>
        <td><form:select id = "chocolateType" path="chocolateType" items="${chocoList}"/></td>
    </tr>
    <tr>
        <td><spring:message code="label.quantity"/></td>
        <td><form:input path="quantity"/></td>
        <td><form:errors path="quantity"/></td>
    </tr>
    
    <tr>
        <td><input type="submit" name="submit" id="submit" value="Calculate Cost"/></td>
    </tr>
</table>
</form:form>

</body>
</html>	 	  	    	    	     	      	 	
---------------------------------------------------------------------------


<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">


    <context:component-scan base-package="com/*">
    </context:component-scan>
    <mvc:annotation-driven validator="validator"/>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- Fill the code here -->
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/views/"/>
        <property name="suffix" value=".jsp"/>
	</bean>
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <!-- Fill the code here -->
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
	    <!-- Fill the code here -->
	    <property name="basename" value="classpath:messages"/>
	    <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
	    <!-- Fill the code here -->
	    <property name="defaultLocale" value="en"/>
    </bean>
    <mvc:interceptors>
        <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
	        <!-- Fill the code here -->
	        <property name="paramName" value="language"/>
        </bean>
    </mvc:interceptors>
</beans>


-------------------------------------------------------------
